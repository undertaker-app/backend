name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint code
        run: yarn lint

      - name: Check TypeScript types
        run: yarn build

      - name: Setup test environment
        run: |
          cp .env.test.example .env || echo "No test env file found, using defaults"
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          CACHE_PROVIDER: memory
          NODE_ENV: test

      - name: Generate Prisma client
        run: yarn prisma:generate
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db

      - name: Run database migrations
        run: yarn prisma:push
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db

      - name: Run unit tests
        run: yarn test
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          CACHE_PROVIDER: memory
          NODE_ENV: test

      - name: Run e2e tests
        run: yarn test:e2e
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          CACHE_PROVIDER: memory
          NODE_ENV: test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build

      - name: Deploy to Railway
        run: |
          echo "ðŸš‚ Deployment will be handled by Railway's GitHub integration"
          echo "âœ… Build successful, Railway will deploy automatically"
